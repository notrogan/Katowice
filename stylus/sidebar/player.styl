.player {
	opacity: 1
	$rowHeight = 1.9em

	color #fff
	line-height $rowHeight

	display grid
	grid-template-rows $rowHeight $rowHeight
	grid-template-columns 1rem 3ch 0.75rem 1ch .5rem 6ch 0rem 5ch 5ch 0rem 3ch 2rem 2rem 6rem .5rem .0rem max-content
	grid-template-areas: \
		'paddingLeft health 0 slot 1 name name name name name roundKills 3 primary primary paddingRight focused stats' \
		'paddingLeft equipment equipment equipment 1 money 5 kills deaths grenades grenades grenades grenades secondary paddingRight focused stats'


	&:nth-child(3) {
		.background {
			&.--top-row {
				border-radius: 10px 10px 0px 0px
			}
		}
		.health-bar {
			.fill {
				border-radius: 10px 10px 0px 0px	
			}
		}
	}

	&:not(:last-child) {
		margin-right: 2rem
		margin-left: 1.25rem
		margin-bottom 0.75rem
	}

	&:last-child {
		.background {
			&.--bottom-row {
				border-radius: 0px 0px 10px 10px	
			}
		}
		// border 1px solid red
		margin-right: 2rem
		margin-left: 1.25rem
		border-radius: 10px
		margin-bottom: 2rem
	}

	&.--right {
		.background {
			&.--top-row {
				&:not(.--alive) {
					background linear-gradient(90deg, rgba(6,37,77,0.5) 20%, rgba(6,37,77,0.2) 100%)
				}		
			}
			&.--bottom-row {
				&:not(.--alive) {
					background linear-gradient(90deg, rgba(6,37,77,0.5) 20%, rgba(6,37,77,0.2) 100%)
				}		
			}
		}
	}

	&.--right {
		transform rotateY(180deg)

		> *:not(.primary):not(.secondary) {
			transform rotateY(-180deg)
		}

		.name,
		.money,
		.money-spent {
			text-align right
		}

		.background {
			&.--top-row {
				&:not(.--alive) {
						background linear-gradient(90deg, rgba(6,37,77,0.2) 20%, rgba(6,37,77,0.5) 100%)
				}		
			}
			&.--bottom-row {
				&:not(.--alive) {
					background linear-gradient(90deg, rgba(6,37,77,0.2) 20%, rgba(6,37,77,0.5) 100%)
				}		
			}
		}

		.equipment {
			grid-template-areas 'bomb armor'
			position relative
			left 0rem
		}

		.kills {
			// position relative
			// right 3rem
			grid-area deaths
		}

		.deaths {
			grid-area kills
		}
	}

	> *:not(.background):not(.health-bar) {
		z-index 1
	}

	.background {
		&.--alive {
			background rgba(6, 37, 77, 0.7)
		}
		&:not(.--alive) {
			background linear-gradient(90deg, rgba(6,37,77,0.5) 20%, rgba(6,37,77,0.1) 100%)
		}
		transition background-color .3s ease

		&.--top-row {
			// border-radius: 3px 3px 0px 0px
			grid-area 1/paddingLeft/1/paddingRight

			&.--alive {
				background rgba(5, 20, 43, 0.7)
			}
		}

		&.--bottom-row {
			
			grid-area 2/paddingLeft/2/paddingRight
		}

		&.--player-focused {
			background rgba(#D3D3D3, .2)
		}
	}

	.health-bar {
		// border-radius: 3px 3px 0px 0px
		grid-area 1/paddingLeft/1/paddingRight
		display grid
		z-index 1

		> * {
			grid-area 1/1
		}

		.fill {
			// border-radius: 3px 3px 0px 0px
			transition filter .3s ease

			&.--left {
				teamBackground_L()
				transform-origin left
			}

			&.--right {
				teamBackground_R()
				transform-origin right
			}

			&.--player-focused {
				// filter brightness(1.225)
			}

			&.--red {
				background darken($red, 25%)
				transition transform .3s ease
			}
		}
	}

	.health {
		// border 1px solid red
		text-align: center
		grid-area health
		justify-content: center
		display flex
		font-weight bold
	}

	.dead-icon {
		position relative
		left 0.5rem
		center()
		grid-area 1/1/3/4
		padding 0rem
	}

	.slot {
		grid-area slot
		font-size 1.25rem
		margin-right 1rem

		&.--left .digit::after,
		&.--right .digit::before {
			content '|'

			display block
			transform translateY(-.1em)
		}

		&.--left .digit::after {
			padding-left .15em
		}

		&.--right .digit::before {
			padding-right .15em
		}

		.digit {
			center()
		}
	}

	.name {
		grid-area name
		text-align left
		font-weight bold
	}

	.round-kills {
		grid-area roundKills

		display flex
		align-items center
		justify-content space-between
		transition opacity .1s ease

		&:not(.--active) {
			opacity 0
		}

		img {
			height 1.5rem
		}
	}

	.primary,
	.secondary {
		display flex
		align-items center
		justify-content flex-end

		img {
			max-height calc(100% - .5rem)
		}
	}

	.primary {
		grid-area primary
	}

	.secondary {
		grid-area secondary
	}

	.equipment {
		position relative
		grid-area equipment

		right 0rem

		display grid
		grid-template-columns 1fr 1fr
		grid-template-areas 'armor bomb'

		img {
			height 1.75rem
		}

		.armor {
			center()
			grid-area armor
		}

		.bomb {
			center()
			grid-area bomb
		}
	}

	.money {
		grid-area money
		color $green
		text-align left
	}

	.money-spent,
	.kills,
	.deaths {
		transition opacity .3s ease .3s

		&:not(.--active) {
			transition opacity .3s ease
			opacity 0
		}
	}

	.money-spent {
		grid-area 2/kills/2/deaths
		color $red
		text-align left
	}

	.kills,
	.deaths,
	.adr {
		display flex

		.label {
			teamColors()
		}
	}

	.kills {
		position relative
		left: 10rem
		opacity: 0
		&:not(.--alive) {
			opacity: 1
		}
		grid-area kills
	}

	.deaths {
		// border 1px solid red
		position relative
		left: 10rem
		opacity: 0
		&:not(.--alive){
			opacity: 1	
		}
		grid-area deaths
	}

	.adr {
		grid-area grenades
		center()
		opacity: 0
		.label {
			margin-right .5ch
		}
	}

	.grenades {
		position: relative
		right 1rem
		grid-area grenades

		display flex
		align-items center

		img {
			height 1.75rem
			width 1.5rem
		}
	}

	.focused {
		grid-area focused
		transition background-color .1s ease

		&.--active {
			background rgba(#fff, .5)
		}
	}

	.stats-wrapper {
		grid-area stats

		display flex
		overflow hidden

		.stats {
			center()

			display grid
			grid-template-rows $rowHeight $rowHeight
			padding 0 1rem 0 .5rem
			flex 1

			background rgba(#000, .5)
			transition opacity .5s ease, transform .5s ease

			&:not(.--active) {
				opacity 0

				&.--left {
					transform translateX(-100%)
				}

				&.--right {
					transform translateX(100%)
				}
			}

			.labels,
			.values {
				display grid
				grid-gap 0 1rem
				grid-template-columns 3ch 3ch 3ch 3ch
			}

			.labels {
				teamColors()
			}

			.value {
				center()

				&.--green {
					color $green
				}

				&.--red {
					color $red
				}
			}
		}
	}
}